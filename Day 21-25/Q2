class Solution
{
    public boolean word(int i,int j,char[][] board,char[] arr,int curr,boolean[][] visited){
        if(curr==arr.length){
            return true;
        }
        if(i<0 || j<0 || i>=board.length || j>=board[0].length || visited[i][j]){
            return false;
        }
        if(arr[curr]==board[i][j]){
            visited[i][j]=true;
            boolean top=word(i,j-1,board,arr,curr+1,visited);
            boolean bottom=word(i,j+1,board,arr,curr+1,visited);
            boolean left=word(i-1,j,board,arr,curr+1,visited);
            boolean right=word(i+1,j,board,arr,curr+1,visited);
            visited[i][j]=false;
            return top||bottom||left||right;
        }
        return false;
    }
    public boolean isWordExist(char[][] board, String word)
    {
        char[] temp=word.toCharArray();
        int n=board.length;
        int m=board[0].length;
        boolean[][] visited=new boolean[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(word(i,j,board,temp,0,visited)){
                    return true;
                }
            }
        }
        return false;
    }
}
