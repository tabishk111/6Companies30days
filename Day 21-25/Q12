class Solution {
    public int[] findOrder(int n, int[][] p) {
        ArrayList<ArrayList<Integer>> adj = new ArrayList<ArrayList<Integer>>();
        int in[] = new int[n];
        Arrays.fill(in,0);
        for(int i=0;i<n;i++)
            adj.add(new ArrayList<Integer>());
        for(int i=0;i<p.length;i++)
        {
            int a = p[i][0];
            int b = p[i][1];
            adj.get(b).add(a);
            in[a]++;
        }
        Queue<Integer> q = new LinkedList<>();
        ArrayList<Integer> res = new ArrayList<>();
        for(int i=0;i<n;i++)
            if(in[i]==0)
                q.add(i);
        while(!q.isEmpty())
        {
            int c = q.remove();
            res.add(c);
            for(int i=0;i<adj.get(c).size();i++)
            {
                int child = adj.get(c).get(i);
                in[child]--;
                if(in[child]==0)
                    q.add(child);
            }
        }
        int ans[] = new int[res.size()];
        if(res.size()!=n)
            return new int[0];
        for(int i=0;i<res.size();i++)
            ans[i] = res.get(i);
        
        return ans;
    }
}
